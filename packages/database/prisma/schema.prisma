// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider     = "prisma-pothos-types"
  clientOutput = "@prisma/client"
  output       = "./pothos-types.ts"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// A movie chosen for a night
model Movie {
  id              String           @id @default(uuid())
  title           String           @unique
  movieSelections MovieSelection[]
}

/// A movie night goer
model Friend {
  id              String           @id @default(uuid())
  name            String           @unique
  movieSelections MovieSelection[]
}

/// A past or scheduled movie night with theme
model Night {
  id              String           @id @default(uuid())
  date            String           @unique /// ISO string
  theme           String
  movieSelections MovieSelection[] @relation("MovieSelections")

  winningSelection         MovieSelection? @relation("WinningSelection", fields: [winningSelectionMovieId, winningSelectionFriendId, winningSelectionNightId], references: [movieId, friendId, nightId])
  winningSelectionMovieId  String?
  winningSelectionFriendId String?
  winningSelectionNightId  String?

  @@unique([winningSelectionMovieId, winningSelectionFriendId, winningSelectionNightId])
}

/// A selection of a movie from a friend on a specific night. Contains an optional friend name override
model MovieSelection {
  movieId String
  movie   Movie  @relation(fields: [movieId], references: [id])

  friend            Friend  @relation(fields: [friendId], references: [id])
  friendId          String
  friendDisplayName String?

  night   Night  @relation("MovieSelections", fields: [nightId], references: [id])
  nightId String
  winningNight Night? @relation("WinningSelection")

  @@id([movieId, friendId, nightId])
}
