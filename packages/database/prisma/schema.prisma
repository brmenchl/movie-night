generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider     = "prisma-pothos-types"
  output       = "./pothos-types.ts"
  clientOutput = "@prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// A movie chosen for a night
model Movie {
  id              String           @id @default(uuid())
  title           String           @unique
  movieSelections MovieSelection[]
}

/// A movie night goer
model Friend {
  id              String           @id @default(uuid())
  name            String           @unique
  movieSelections MovieSelection[]
}

/// A past or scheduled movie night with theme
model Night {
  id                       String           @id @default(uuid())
  /// ISO string
  date                     String           @unique
  theme                    String
  spinAgainCount           Int              @default(0)
  winningSelectionFriendId String?
  winningSelectionNightId  String?
  movieSelections          MovieSelection[] @relation("MovieSelections")
  winningSelection         MovieSelection?  @relation("WinningSelection", fields: [winningSelectionFriendId, winningSelectionNightId], references: [friendId, nightId])
  @@unique([winningSelectionFriendId, winningSelectionNightId])
}

/// A selection of a movie from a friend on a specific night
model MovieSelection {
  movieId      String
  friendId     String
  nightId      String
  friend       Friend @relation(fields: [friendId], references: [id])
  movie        Movie  @relation(fields: [movieId], references: [id])
  night        Night  @relation("MovieSelections", fields: [nightId], references: [id])
  winningNight Night? @relation("WinningSelection")

  @@id([friendId, nightId])
}
